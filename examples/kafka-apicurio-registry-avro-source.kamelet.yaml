apiVersion: camel.apache.org/v1alpha1
kind: Kamelet
metadata:
  name: kafka-apicurio-registry-avro-source
  labels:
    camel.apache.org/kamelet.type: source
spec:
  definition:
    description: >-
      Receive data from Kafka topics on an insecure broker combined with
      Apicurio Registry.
    properties:
      bootstrapServers:
        description: Comma separated list of Kafka Broker URLs
        title: Bootstrap Servers
        type: string
        x-descriptors:
          - 'urn:keda:metadata:bootstrapServers'
          - 'urn:keda:required'
      valueDeserializer:
        default: io.apicurio.registry.serde.avro.AvroKafkaDeserializer
        description: >-
          Deserializer class for value that implements the Deserializer
          interface.
        title: Value Deserializer
        type: string
      allowManualCommit:
        default: false
        description: Whether to allow doing manual commits
        title: Allow Manual Commit
        type: boolean
      apicurioRegistryUrl:
        description: The Apicurio Schema Registry URL
        title: Apicurio Registry URL
        type: string
        x-descriptors:
          - 'urn:keda:metadata:bootstrapServers'
          - 'urn:keda:required'
      deserializeHeaders:
        default: true
        description: >-
          When enabled the Kamelet source will deserialize all message headers
          to String representation.
        title: Automatically Deserialize Headers
        type: boolean
      consumerGroup:
        description: >-
          A string that uniquely identifies the group of consumers to which this
          source belongs
        example: my-group-id
        title: Consumer Group
        type: string
        x-descriptors:
          - 'urn:keda:metadata:consumerGroup'
          - 'urn:keda:required'
      autoCommitEnable:
        default: true
        description: >-
          If true, periodically commit to ZooKeeper the offset of messages
          already fetched by the consumer
        title: Auto Commit Enable
        type: boolean
      pollOnError:
        default: ERROR_HANDLER
        description: >-
          What to do if kafka threw an exception while polling for new messages.
          There are 5 enums and the value can be one of DISCARD, ERROR_HANDLER,
          RECONNECT, RETRY, STOP
        title: Poll On Error Behavior
        type: string
      autoOffsetReset:
        default: latest
        description: >-
          What to do when there is no initial offset. There are 3 enums and the
          value can be one of latest, earliest, none
        title: Auto Offset Reset
        type: string
        x-descriptors:
          - 'urn:keda:metadata:offsetResetPolicy'
      avroDatumProvider:
        default: io.apicurio.registry.serde.avro.ReflectAvroDatumProvider
        description: How to read data with Avro
        title: Avro Datum Provider
        type: string
      topic:
        description: Comma separated list of Kafka topic names
        title: Topic Names
        type: string
        x-descriptors:
          - 'urn:keda:metadata:topic'
          - 'urn:keda:required'
    required:
      - topic
      - bootstrapServers
      - apicurioRegistryUrl
    title: Kafka Not Secured with Apicurio Registry Source
    type: object
  dependencies:
    - 'mvn:org.apache.camel.kamelets:camel-kamelets-utils:0.9.4'
    - 'camel:kafka'
    - 'camel:core'
    - 'camel:kamelet'
    - 'mvn:io.quarkus:quarkus-apicurio-registry-avro:2.16.12.Final'
  template:
    beans:
      - name: kafkaHeaderDeserializer
        properties:
          enabled: '{{deserializeHeaders}}'
        type: >-
          #class:org.apache.camel.kamelets.utils.serialization.kafka.KafkaHeaderDeserializer
    from:
      parameters:
        valueDeserializer: '{{valueDeserializer}}'
        allowManualCommit: '{{allowManualCommit}}'
        additionalProperties.apicurio.registry.avro-datum-provider: '{{avroDatumProvider}}'
        autoCommitEnable: '{{autoCommitEnable}}'
        pollOnError: '{{pollOnError}}'
        additionalProperties.apicurio.registry.url: '{{apicurioRegistryUrl}}'
        autoOffsetReset: '{{autoOffsetReset}}'
        brokers: '{{bootstrapServers}}'
        groupId: '{{?consumerGroup}}'
      steps:
        - process:
            ref: '{{kafkaHeaderDeserializer}}'
        - to: 'kamelet:sink'
      uri: 'kafka:{{topic}}'
